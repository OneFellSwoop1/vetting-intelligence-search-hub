name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    
    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        cd backend
        pip install -r requirements.txt
    
    - name: Wait for Redis
      run: |
        timeout 30 bash -c 'until redis-cli -h localhost -p 6379 ping; do sleep 1; done'
    
    - name: Check imports and basic functionality
      run: |
        cd backend
        python -c "from app.main import app; print('✅ Backend imports successful')"
      env:
        # Dummy API keys for testing (CI environment)
        LDA_API_KEY: 'dummy_key_for_testing_12345678901234567890'
        SOCRATA_API_KEY_ID: 'dummy_socrata_key_id_12345'
        SOCRATA_API_KEY_SECRET: 'dummy_socrata_secret_12345678901234567890123456789012345678'
        SOCRATA_APP_TOKEN: 'dummy_app_token_12345678'
        # Optional environment variables
        ENVIRONMENT: 'test'
        LOG_LEVEL: 'INFO'
        REDIS_URL: 'redis://localhost:6379/0'

  test-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Verify utils file exists
      run: |
        cd frontend
        ls -la src/lib/utils.ts
        echo "✅ Utils file exists"
    
    - name: Type check
      run: |
        cd frontend
        npx tsc --noEmit
        
    - name: Build
      run: |
        cd frontend
        npm run build 